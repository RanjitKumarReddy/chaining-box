#!/usr/bin/env bash

# Script to compile ChainingBox stages and userspace agents
# from the provided Docker container with all dependencies
NAME="build-$(date +%y%m%d-%H%M%S)"

# Specify user so we have the correct permissions to access
# the files generated by the build
BUILD_USER="$(id -u):$(id -g)"

# TODO: For some reason the GOCACHE setup is not working.
# Everytime we compile the golang code it downloads all
# dependencies. This should be fixed to use the host's
# cache.

docker run --name $NAME \
           --volume $(pwd):/cb \
           --volume ~/.cache/go-build:/mycache \
           --entrypoint "/usr/bin/make" \
           --env GOCACHE=/mycache \
           mscastanho/chaining-box:cb-build \
           -C /cb KDIR=/usr/src/kernel-headers \
           OWNER=$BUILD_USER $@ 
# For some reason, all arguments to the entrypoint command
# must come *after* the image name. So this last line contains
# the arguments to 'make'

# Print output
#docker logs $NAME

# Remove container silently
docker rm $NAME > /dev/null
