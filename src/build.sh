#!/usr/bin/env bash

# Temp dir to hold golang downdload data, so we don't have
# to fetch dependencies from the Internet on every build
CACHE="/tmp/cb-cache"
LOCALGOCACHE="$CACHE/go-build"

if [ ! -d $CACHE ]; then
  mkdir -p $CACHE
  mkdir -p $LOCALGOCACHE 
fi

# Script to compile ChainingBox stages and userspace agents
# from the provided Docker container with all dependencies
NAME="build-$(date +%y%m%d-%H%M%S)"

# Specify user so we have the correct permissions to access
# the files generated by the build
BUILD_USER="$(id -u):$(id -g)"

docker run --name $NAME \
           --volume $(pwd):/cb \
           --volume $LOCALGOCACHE:/gocache \
           --volume $CACHE:/root/ \
           --entrypoint "/usr/bin/make" \
           --env GOCACHE=/gocache \
           --rm \
           mscastanho/chaining-box:cb-build \
           -C /cb KDIR=/usr/src/kernel-headers \
           OWNER=$BUILD_USER $@ 
# For some reason, all arguments to the entrypoint command
# must come *after* the image name. So this last line contains
# the arguments to 'make'
